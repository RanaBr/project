#generate a random signal
import numpy as np
import matplotlib.pyplot as plt
import pylab as plp
from pylab import *


x=numpy.linspace(-1,1,100)
signal=2+x+2*x*x*x;
noise=np.random.normal(0,0.1,100)
y=signal+noise;
plp.plot(signal,'b')
plp.plot(y,'g')
plp.plot(noise,'r')
plp.xlabel("x")
plp.ylabel("y")
pylab.legend(["Without Noise", "With Noise", "Noise"], loc = 2)

#modulation

fm = 4.0
fc= 40.0
modulation_index = 1.0

time = np.arange(44100.0) / 44100.0
modulator = np.sin(2.0 * np.pi *fm * time) * modulation_index
carrier = np.sin(2.0 * np.pi * fc * time)
product = np.zeros_like(modulator)

for i, t in enumerate(time):
    product[i] = np.sin(2. * np.pi * (fc * t + modulator[i])) or product[i] = np.sin(fc * time - modulation_index * np.cos(fm* time))

plt.subplot(3, 1, 1)
plt.title('Frequency Modulation')
plt.plot(modulator)
plt.ylabel('Amplitude')
plt.xlabel('Modulator signal')
plt.subplot(3, 1, 2)
plt.plot(carrier)
plt.ylabel('Amplitude')
plt.xlabel('Carrier signal')
plt.subplot(3, 1, 3)
plt.plot(product)
plt.ylabel('Amplitude')
plt.xlabel('Output signal')
plt.show()
